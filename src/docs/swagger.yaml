openapi: 3.0.0
info:
  title: ODX API
  version: 1.0.0
  description: API para gerenciamento de casos e evidências na Odontologia Legal

servers:
  - url: https://odx-pericias-back.onrender.com

paths:

  # ROTAS DE AUTENTICAÇÃO
  /auth/register:
    post:
      summary: Registra um novo usuário
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso

  /auth/login:
    post:
      summary: Autentica um usuário
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login bem-sucedido

  /auth/logout:
    post:
      summary: Realiza logout do usuário
      tags: [Auth]
      responses:
        '200':
          description: Logout efetuado

  /auth/listusers:
    get:
      summary: Lista todos os usuários
      tags: [Auth]
      responses:
        '200':
          description: Lista de usuários

  # ROTAS DE CASOS
  /casos:
    post:
      summary: Cadastra um novo caso
      tags: [Casos]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '201':
          description: Caso cadastrado com sucesso

    get:
      summary: Lista todos os casos
      tags: [Casos]
      responses:
        '200':
          description: Lista de casos

  /cases/{caseId}/status:
    patch:
      summary: Atualiza o status de um caso
      tags: [Casos]
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status atualizado com sucesso

  # ROTAS DE EVIDÊNCIAS
  /evidence/text:
    post:
      summary: Upload de evidência textual
      tags: [Evidências]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextEvidence'
      responses:
        '201':
          description: Texto enviado

  /evidence/image:
    post:
      summary: Upload de imagem como evidência
      tags: [Evidências]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageEvidence'
      responses:
        '201':
          description: Imagem enviada

  /evidence/{caseId}:
    post:
      summary: Adiciona evidência a um caso
      tags: [Evidências]
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evidence'
      responses:
        '201':
          description: Evidência adicionada

  /evidence/coletar:
    post:
      summary: Coleta evidências
      tags: [Evidências]
      responses:
        '200':
          description: Evidências coletadas

  /evidence/analisar:
    post:
      summary: Analisa evidências
      tags: [Evidências]
      responses:
        '200':
          description: Evidências analisadas

  /evidence/enviar:
    get:
      summary: Envia dados complementares ao caso
      tags: [Evidências]
      responses:
        '200':
          description: Dados enviados com sucesso

  # ROTAS LAUDOS
  /evidence/gerar-laudo/{caseId}:
    post:
      summary: Gera um laudo a partir das evidências
      tags: [Laudos]
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Laudo gerado

  /evidence/sign/{reportId}:
    post:
      summary: Assina digitalmente o laudo
      tags: [Laudos]
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Laudo assinado

  # ROTAS DE RELATÓRIOS 
  /report:
    post:
      summary: Cria um relatório
      tags: [Relatório]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          description: Relatório criado

    get:
      summary: Lista todos relatórios
      tags: [Relatório]
      responses:
        '200':
          description: Lista de Relatórios

  /report/generate/{caseId}:
    post:
      summary: Gera o relatório de um caso
      tags: [Relatório]
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Relatório gerado

  /report/pdf/{reportId}:
    get:
      summary: Exporta Relatório em PDF
      tags: [Relatório]
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: PDF gerado com sucesso

  /report/{reportId}:
    get:
      summary: Busca Relatório por ID
      tags: [Relatório]
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do Relatório

#COMPONENTES
components:
  schemas:
    Case:
      type: object
      properties:
        titulo:
          type: string
        descricao:
          type: string
        status:
          type: string
          enum: [Em andamento, Finalizado, Arquivado]
        responsavel:
          type: string
          format: uuid
        evidencias:
          type: array
          items:
            type: string
            format: uuid
        dataCriacao:
          type: string
          format: date-time

    ComparisonResult:
      type: object
      properties:
        resultado:
          type: string
        precisao:
          type: number
        analisadoPor:
          type: string
          format: uuid
        casoRelacionado:
          type: string
          format: uuid
        dataAnalise:
          type: string
          format: date-time

    Evidence:
      type: object
      properties:
        tipo:
          type: string
        dataColeta:
          type: string
          format: date
        coletadoPor:
          type: string
          format: uuid
        url:
          type: string
          format: uri
        categoria:
          type: string
          enum:
            - Radiografia Panorâmica
            - Imagem Intraoral
            - Radiografia Periapical
            - Análise de Prontuário
            - Outro

    ImageEvidence:
      allOf:
        - $ref: '#/components/schemas/Evidence'
        - type: object
          properties:
            imagemURL:
              type: string
              format: uri

    TextEvidence:
      allOf:
        - $ref: '#/components/schemas/Evidence'
        - type: object
          properties:
            conteudo:
              type: string

    Report:
      type: object
      properties:
        titulo:
          type: string
        conteudo:
          type: string
        peritoResponsavel:
          type: string
          format: uuid
        casoRelacionado:
          type: string
          format: uuid
        dataCriacao:
          type: string
          format: date-time

    User:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
        perfil:
          type: string
          enum: [Admin, Perito, Assistente]
        rg:
          type: string
        cro:
          type: string

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        senha:
          type: string
