openapi: 3.0.0
info:
  title: ODX API
  version: 1.0.0
  description: API para gerenciamento de casos e evidências na Odontologia Legal

servers:
  - url: https://odx-pericias-back.onrender.com

security:
  - BearerAuth: []

paths:
  /api/auth/login:
    post:
      summary: Autentica um usuário
      tags: [Auth]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

  /api/auth/logout:
    post:
      summary: Realiza logout do usuário
      tags: [Auth]
      responses:
        '200':
          description: Logout efetuado

  /api/auth/logged-user:
    get:
      summary: Retorna os dados do usuário logado
      tags: [Auth]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Dados do usuário logado

  /api/auth/forgot-password:
    post:
      summary: Redefine senha ou email do usuário logado
      tags: [Auth]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                oldPassword:
                  type: string
                newEmail:
                  type: string
      responses:
        '200':
          description: Informações atualizadas com sucesso

  /api/user:
    post:
      summary: Cria um novo usuário (somente Admin)
      tags: [User]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso
    get:
      summary: Lista todos os usuários
      tags: [User]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de usuários

  /api/user/{userId}:
    put:
      summary: Edita um usuário (somente Admin)
      tags: [User]
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Informações do usuário atualizadas com sucesso
    delete:
      summary: Deleta um usuário (somente Admin)
      tags: [User]
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuário deletado com sucesso

  /api/cases:
    post:
      summary: Criar um novo caso
      description: Cria um novo caso com as informações fornecidas.
      tags: [Cases]
      security:
        - BearerAuth: []
      requestBody:
        description: Dados do novo caso a ser criado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseRequest'
      responses:
        '201':
          description: Caso criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '400':
          description: Erro na solicitação
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
    get:
      summary: Listar todos os casos
      description: Retorna uma lista de todos os casos cadastrados.
      tags: [Cases]
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: titulo
          schema:
            type: string
        - in: query
          name: responsavel
          schema:
            type: string
        - in: query
          name: dataCriacao
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Lista de casos retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada

  /api/cases/case-title:
    get:
      summary: Obter título de um caso
      description: Retorna o título de um caso específico.
      tags: [Cases]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Título do caso retornado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  titulo:
                    type: string
                    example: "Caso João da Silva"
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Caso não encontrado

  /api/cases/{caseId}:
    put:
      summary: Atualizar caso
      description: Atualiza as informações de um caso existente.
      tags: [Cases]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseUpdate'
      responses:
        '200':
          description: Caso atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Caso não encontrado
        '500':
          description: Erro ao atualizar caso
    delete:
      summary: Deletar caso
      description: Remove um caso existente.
      tags: [Cases]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: caseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Caso deletado com sucesso
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Caso não encontrado
        '500':
          description: Erro ao deletar caso

  /api/evidence:
    post:
      summary: Adiciona uma nova evidência
      description: Adiciona uma nova evidência associada a um caso, incluindo upload de arquivo.
      tags: [Evidências]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EvidenceRequest'
      responses:
        '200':
          description: Evidência adicionada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
        '400':
          description: Dados inválidos
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '500':
          description: Erro interno do servidor
    get:
      summary: Listar todas as evidências
      description: Retorna uma lista de todas as evidências cadastradas.
      tags: [Evidências]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de evidências retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evidence'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '500':
          description: Erro interno do servidor

  /api/evidence/{evidenceId}:
    put:
      summary: Atualizar evidência
      description: Atualiza as informações de uma evidência existente.
      tags: [Evidências]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: evidenceId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceRequest'
      responses:
        '200':
          description: Evidência atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Evidência não encontrada
        '500':
          description: Erro ao atualizar evidência
    delete:
      summary: Deletar evidência
      description: Remove uma evidência existente.
      tags: [Evidências]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: evidenceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Evidência deletada com sucesso
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Evidência não encontrada
        '500':
          description: Erro ao deletar evidência

  /api/report:
    post:
      summary: Criar um novo relatório pericial
      description: Gera um novo relatório pericial associado a um caso.
      tags: [Relatório]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          description: Relatório criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Dados inválidos
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '500':
          description: Erro ao criar relatório
    get:
      summary: Listar todos os relatórios
      description: Retorna uma lista de todos os relatórios periciais cadastrados.
      tags: [Relatório]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de relatórios retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '500':
          description: Erro interno do servidor

  /api/report/{reportId}:
    put:
      summary: Atualizar relatório
      description: Atualiza as informações de um relatório pericial existente.
      tags: [Relatório]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: Relatório atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Relatório não encontrado
        '500':
          description: Erro ao atualizar relatório
    delete:
      summary: Deletar relatório
      description: Remove um relatório pericial existente.
      tags: [Relatório]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Relatório deletado com sucesso
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Relatório não encontrado
        '500':
          description: Erro ao deletar relatório

  /api/report/sign/{reportId}:
    post:
      summary: Assina digitalmente um relatório
      description: Assina digitalmente um relatório pericial existente.
      tags: [Relatório]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Relatório assinado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '401':
          description: Usuário não autenticado
        '403':
          description: Permissão negada
        '404':
          description: Relatório não encontrado
        '500':
          description: Erro ao assinar o relatório

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Case:
      type: object
      properties:
        titulo:
          type: string
          example: "Caso de identificação de vítima"
        descricao:
          type: string
          example: "Caso envolvendo a identificação de uma vítima de acidente de carro."
        status:
          type: string
          enum: [Em andamento, Finalizado, Arquivado]
          example: "Em andamento"
        responsavel:
          type: string
          example: "Juliana Costa"
        dataCriacao:
          type: string
          format: date
          example: "2025-04-12"

    CaseRequest:
      type: object
      properties:
        titulo:
          type: string
          example: "Caso João da Silva"
        descricao:
          type: string
          example: "Caso de desaparecimento ocorrido em março de 2025"
        status:
          type: string
          enum: [Em andamento, Finalizado, Arquivado]
          example: "Em andamento"
        responsavel:
          type: string
          example: "Dra. Ana Paula"

    CaseUpdate:
      type: object
      properties:
        titulo:
          type: string
          example: "Caso atualizado João da Silva"
        descricao:
          type: string
          example: "Descrição atualizada do caso"
        status:
          type: string
          enum: [Em andamento, Finalizado, Arquivado]
          example: "Finalizado"
        responsavel:
          type: string
          example: "Dra. Ana Paula"

    Evidence:
      type: object
      properties:
        caso:
          type: string
          description: Título do caso relacionado
          example: "Caso João da Silva"
        tipoEvidencia:
          type: string
          enum: [imagem, texto]
          example: "imagem"
        categoria:
          type: string
          example: "Radiografia Panorâmica"
        dataUpload:
          type: string
          format: date-time
          example: "2025-04-10T14:30:00Z"
        vitima:
          type: string
          enum: [identificada, não identificada]
          example: "identificada"
        sexo:
          type: string
          enum: [masculino, feminino, indeterminado]
          example: "masculino"
        estadoCorpo:
          type: string
          enum: [inteiro, fragmentado, carbonizado, putrefacto, esqueleto]
          example: "inteiro"
        lesoes:
          type: string
          example: "Fratura no osso maxilar"
        conteudo:
          type: string
          example: "Relatório textual sobre a arcada dentária"
        imagemURL:
          type: string
          format: uri
          example: "https://res.cloudinary.com/exemplo/image/upload/v1689371938/imagem.jpg"
        coletadoPor:
          type: string
          example: "Dra. Helena Costa"
        laudo:
          type: string
          example: "texto do laudo pericial"

    EvidenceRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: Arquivo da evidência (imagem ou texto)
        tipoEvidencia:
          type: string
          enum: [imagem, texto]
          example: "imagem"
        categoria:
          type: string
          example: "Radiografia Panorâmica"
        vitima:
          type: string
          enum: [identificada, não identificada]
          example: "identificada"
        sexo:
          type: string
          enum: [masculino, feminino, indeterminado]
          example: "masculino"
        estadoCorpo:
          type: string
          enum: [inteiro, fragmentado, carbonizado, putrefacto, esqueleto]
          example: "carbonizado"
        lesoes:
          type: string
          example: "Ausência de dentes superiores"
        conteudo:
          type: string
          example: "Texto de evidência se for do tipo texto"
        casoId:
          type: string
          example: "67fb107daf5f09812475534f"

    Report:
      type: object
      properties:
        titulo:
          type: string
          example: "Laudo pericial do Caso João da Silva"
        descricao:
          type: string
          example: "Laudo contendo análises odontológicas detalhadas"
        objetoPericia:
          type: string
          example: "Identificação humana por meio de exames odontológicos"
        analiseTecnica:
          type: string
          example: "Análise das evidências fornecidas com foco em características dentárias únicas"
        metodoUtilizado:
          type: string
          example: "Comparação radiográfica e análise de arcada dentária"
        destinatario:
          type: string
          example: "Polícia Civil de Pernambuco"
        materiaisUtilizados:
          type: string
          example: "Radiografias, fotografias intraorais"
        examesRealizados:
          type: string
          example: "Exame radiográfico, exame clínico"
        consideracoesTecnicoPericiais:
          type: string
          example: "Não foram identificadas discrepâncias entre as evidências e os dados fornecidos"
        conclusaoTecnica:
          type: string
          example: "A vítima foi identificada como João da Silva com alto grau de certeza"
        caso:
          type: string
          example: "662105eaf10c8c001fa1d749"
        evidencias:
          type: array
          items:
            type: string
            example: "661fdac56e1b1700170e3d4a"
        criadoEm:
          type: string
          format: date-time
          example: "2025-04-15T10:00:00Z"
        assinadoDigitalmente:
          type: boolean
          example: true

    User:
      type: object
      properties:
        nome:
          type: string
          example: "Juliana Costa"
        email:
          type: string
          format: email
          example: "juliana.costa@email.com"
        senha:
          type: string
          example: "senha"
        tipoUsuario:
          type: string
          enum: [Admin, Perito, Assistente]
          example: "Admin"

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: "roberta.silva@email.com"
        senha:
          type: string
          example: "senha"